"""Add project version delta

Revision ID: 4b4648483770
Revises: bd1ec73db389
Create Date: 2025-10-24 09:55:18.286286

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4b4648483770"
down_revision = "bd1ec73db389"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project_version_delta",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("rank", sa.Integer(), nullable=False),
        sa.Column("project_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("changes", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.ForeignKeyConstraint(
            ["project_id"],
            ["project.id"],
            name=op.f("fk_project_version_delta_project_id_project"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_project_version_delta")),
        sa.UniqueConstraint("project_id", "version", "rank", name="unique_deltas"),
    )
    op.create_index(
        op.f("ix_project_version_delta_project_id"),
        "project_version_delta",
        ["project_id"],
        unique=False,
    )
    op.create_index(
        "ix_project_version_delta_project_id_version_rank",
        "project_version_delta",
        ["project_id", "version", "rank"],
        unique=False,
    )
    op.create_index(
        op.f("ix_project_version_delta_rank"),
        "project_version_delta",
        ["rank"],
        unique=False,
    )
    op.create_index(
        op.f("ix_project_version_delta_version"),
        "project_version_delta",
        ["version"],
        unique=False,
    )
    # ### end Alembic commands ###

    op.execute(
        """
        INSERT INTO project_version_delta (project_id, version, rank, changes)
        WITH delta AS (
            SELECT
                h.version_id,
                jsonb_agg(
                    jsonb_strip_nulls(
                        jsonb_build_object(
                            'path', fp.path,
                            'size', h.size,
                            'change', h.change,
                            'version', h.project_version_name,
                            'checksum', h.checksum,
                            'diff', fdj.diff_path
                        )
                    )
                ) AS changes
            FROM
                file_history h
            JOIN
                project_file_path fp ON h.file_path_id = fp.id
            LEFT JOIN LATERAL (
                SELECT
                    fd.path AS diff_path
                FROM
                    file_diff fd
                WHERE
                    fd.file_path_id = fp.id
                    AND fd.version = h.project_version_name
                    AND fd.rank = 0
            ) fdj ON TRUE
            GROUP BY
                -- Group by the single unique version identifier
                h.version_id
        )
        SELECT
            pv.project_id,
            pv.name,
            0 AS rank,
            d.changes
        FROM
            delta AS d
        JOIN project_version AS pv ON d.version_id = pv.id
        ;
        """
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_project_version_delta_version"), table_name="project_version_delta"
    )
    op.drop_index(
        op.f("ix_project_version_delta_rank"), table_name="project_version_delta"
    )
    op.drop_index(
        "ix_project_version_delta_project_id_version_rank",
        table_name="project_version_delta",
    )
    op.drop_index(
        op.f("ix_project_version_delta_project_id"), table_name="project_version_delta"
    )
    op.drop_table("project_version_delta")
    # ### end Alembic commands ###
