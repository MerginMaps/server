openapi: 3.0.0
info:
  description: Mergin API to synchronize your GIS data.
  version: "0.6"
  title: Mergin API
servers:
  - url: /v2
tags:
  - name: project
    description: Mergin project
paths:
  /projects/{id}:
    parameters:
      - $ref: "#/components/parameters/ProjectId"
    delete:
      tags:
        - project
      summary: Delete project immediately
      operationId: delete_project_now
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
    patch:
      tags:
        - project
      summary: Update project
      operationId: update_project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: survey
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          description: Invalid project name
          content:
            application/json:
              schema:
                type: object
                required:
                  - code
                  - detail
                properties:
                  code:
                    type: string
                    enum:
                      - InvalidProjectName
                    example: InvalidProjectName
                  detail:
                    type: string
                    example: "Entered project name is invalid"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
  /projects/{id}/scheduleDelete:
    post:
      tags:
        - project
      summary: Schedule project to delete
      operationId: schedule_delete_project
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
  # /projects/{id}/chunks:
  #   post:
  #     tags:
  #       - project
  #     summary: Upload file chunk.
  #     operationId: upload_chunk
  #     parameters:
  #       - $ref: "#/components/parameters/ProjectId"
  #     requestBody:
  #       x-stream-upload: true
  #       content:
  #         application/octet-stream:
  #           schema:
  #             type: string
  #             format: binary
  #     responses:
  #       "200":
  #         description: Chunk upload response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/UploadChunk"
  #       "400":
  #         $ref: "#/components/responses/BadRequest"
  #       "401":
  #         $ref: "#/components/responses/Unauthorized"
  #       "403":
  #         $ref: "#/components/responses/Forbidden"
  #       "404":
  #         $ref: "#/components/responses/NotFound"
  #       "413":
  #         $ref: "#/components/responses/RequestTooBig"
  #     x-openapi-router-controller: mergin.sync.public_api_v2_controller
  /projects/{id}/collaborators:
    parameters:
      - $ref: "#/components/parameters/ProjectId"
    get:
      tags:
        - project
      summary: Get project collaborators
      operationId: get_project_collaborators
      responses:
        "200":
          description: Project members
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProjectMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
    post:
      tags:
        - project
      summary: Add project collaborator
      operationId: add_project_collaborator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
                - role
              properties:
                user:
                  type: string
                  example: john.doe
                  description: username or email
                role:
                  $ref: "#/components/schemas/ProjectRole"
      responses:
        "201":
          description: New project member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
  /projects/{id}/collaborators/{user_id}:
    parameters:
      - $ref: "#/components/parameters/ProjectId"
      - name: user_id
        in: path
        description: user id
        required: true
        schema:
          type: integer
    patch:
      tags:
        - project
      summary: Update project collaborator
      operationId: update_project_collaborator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - role
              properties:
                role:
                  $ref: "#/components/schemas/ProjectRole"
      responses:
        "200":
          description: Updated project member
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
    delete:
      tags:
        - project
      summary: Remove project collaborator
      operationId: remove_project_collaborator
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      responses:
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
  /projects/{id}/raw/diff/{file}:
    get:
      tags:
        - project
      summary: Download project geopackage diff file
      operationId: download_diff_file
      parameters:
        - $ref: "#/components/parameters/ProjectId"
        - name: file
          required: true
          in: path
          description: File path
          schema:
            type: string
            example: survey.gpkg-diff-1b9fe848-d2e4-4c53-958d-3dd97e5486f6
      responses:
        "200":
          description: File content (or its part)
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          description: Requested diff file could not be downloaded as it was not created
          # mixing content types would trigger 500 on response validation
          # might be related to issue https://github.com/spec-first/connexion/issues/2054
          # content:
          #   application/json+problem:
          #     schema:
          #       $ref: "#/components/schemas/DiffDownloadError"
      x-openapi-router-controller: mergin.sync.public_api_v2_controller
  /projects/{id}/versions:
    post:
      tags:
        - project
      summary: Create a new project version from pushed data
      operationId: create_project_version
      parameters:
        - $ref: "#/components/parameters/ProjectId"
      requestBody:
        description: Project files changes and current version head.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - version
                - changes
              properties:
                check_only:
                  type: boolean
                  default: false
                  example: true
                version:
                  type: string
                  pattern: '^$|^v\d+$'
                  example: v2
                changes:
                  type: object
                  required:
                    - added
                    - updated
                    - removed
                  properties:
                    added:
                      type: array
                      items:
                        $ref: "#/components/schemas/UploadFile"
                    updated:
                      type: array
                      items:
                        $ref: "#/components/schemas/UpdateFile"
                    removed:
                      type: array
                      items:
                        $ref: "#/components/schemas/File"
      responses:
        "201":
          description: New project version
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
        "204":
          $ref: "#/components/responses/NoContent"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          description: Version already exists or another process is already running
          content:
            application/problem+json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ProjectVersionExists"
                  - $ref: "#/components/schemas/AnotherUploadRunning"
        "422":
          description: Request could not be processed by server
          content:
            application/problem+json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/UploadError"
                  - $ref: "#/components/schemas/TrialExpired"
                  - $ref: "#/components/schemas/StorageLimitHit"
                  - $ref: "#/components/schemas/DataSyncError"
        "423":
          description: Project is locked for any upload
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProjectLocked"

      x-openapi-router-controller: mergin.sync.public_api_v2_controller
components:
  responses:
    NoContent:
      description: No content
    BadRequest:
      description: Invalid request
    Unauthorized:
      description: Authentication information is missing or invalid
    Forbidden:
      description: Invalid token
    NotFound:
      description: Not found
    Conflict:
      description: Conflict
    RequestTooBig:
      description: Request Entity Too Large
  parameters:
    ProjectId:
      name: id
      in: path
      description: UUID of the project
      required: true
      schema:
        type: string
        format: uuid
        pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
  schemas:
    # Errors
    CustomError:
      type: object
      properties:
        code:
          type: string
        detail:
          type: string
      required:
        - code
        - detail
    TrialExpired:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      example:
        code: TrialExpired
        detail: Failed to push changes. Ask the workspace owner to log in to their Mergin Maps dashboard
    StorageLimitHit:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      type: object
      properties:
        current_usage:
          type: integer
        storage_limit:
          type: integer
      example:
        code: StorageLimitHit
        detail: You have reached a data limit (StorageLimitHit)
        current_usage: 24865
        storage_limit: 24865
    ProjectLocked:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      example:
        code: ProjectLocked
        detail: The project is currently locked and you cannot make changes to it (ProjectLocked)
    ProjectVersionExists:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      type: object
      properties:
        client_version:
          type: string
        server_version:
          type: string
      example:
        code: ProjectVersionExists
        detail: Project version mismatch (ProjectVersionExists)
    AnotherUploadRunning:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      type: object
      properties:
        client_version:
          type: string
        server_version:
          type: string
      example:
        code: AnotherUploadRunning
        detail: Another process is running (AnotherUploadRunning)
    DataSyncError:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      type: object
      properties:
        failed_files:
          type: object
      example:
        code: DataSyncError
        detail: "There are either corrupted files or it is not possible to create version with provided geopackage data (DataSyncError)"
        failed_files:
          "survey.gpkg": "Corrupted file"
    UploadError:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      example:
        code: UploadError
        detail: "Project version could not be created (UploadError)"
    DiffDownloadError:
      allOf:
        - $ref: "#/components/schemas/CustomError"
      example:
        code: DiffDownloadError
        detail: Required diff file could not be created (DiffDownloadError)
    # Data
    ProjectRole:
      type: string
      nullable: true
      enum:
        - owner
        - writer
        - editor
        - reader
      example: reader
    WorkspaceRole:
      type: string
      enum:
        - owner
        - admin
        - writer
        - editor
        - reader
        - guest
      example: writer
    Role:
      allOf:
        - $ref: "#/components/schemas/ProjectRole"
          nullable: false
          description: combination of workspace role and project role
    UploadChunk:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        valid_until:
          type: string
          format: date-time
          example: "2023-10-01T12:00:00Z"
    ProjectMember:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: john.doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        workspace_role:
          $ref: "#/components/schemas/WorkspaceRole"
        project_role:
          $ref: "#/components/schemas/ProjectRole"
        role:
          $ref: "#/components/schemas/Role"
    File:
      type: object
      description: Project file metadata
      required:
        - path
        - size
      properties:
        path:
          type: string
          example: media/favicon.ico
        size:
          type: integer
          format: int64
          example: 1024
        checksum:
          description: sha1 hash of file
          type: string
          example: 9adb76bf81a34880209040ffe5ee262a090b62ab
    UploadFile:
      description: Metadata of uploaded file with chunks it is composed of
      allOf:
        - $ref: "#/components/schemas/File"
        - type: object
          properties:
            chunks:
              type: array
              items:
                type: string
                example: d17a60eb-6581-431c-adfc-3451231455bb
    UpdateFile:
      description: Metadata of updated file with optional metadata about uploaded file diff
      allOf:
        - $ref: "#/components/schemas/UploadFile"
        - type: object
          properties:
            diff:
              nullable: true
              allOf:
                - $ref: "#/components/schemas/File"
    MerginTag:
      type: string
      enum:
        - valid_qgis
        - mappin_use
        - input_use
      example: valid_qgis
    Access:
      type: object
      properties:
        ownersnames:
          type: array
          nullable: false
          items:
            type: string
          example: [john.doe]
        writersnames:
          type: array
          nullable: false
          items:
            type: string
          example: [john.doe]
        editorsnames:
          type: array
          nullable: false
          items:
            type: string
          example: [john.doe]
        readersnames:
          type: array
          nullable: false
          items:
            type: string
          example: [john.doe]
        public:
          type: boolean
          example: true
        owners:
          type: array
          nullable: false
          items:
            type: integer
          example: [1]
        writers:
          type: array
          nullable: false
          items:
            type: integer
          example: [1]
        editors:
          type: array
          nullable: false
          items:
            type: integer
          example: [1]
        readers:
          type: array
          nullable: false
          items:
            type: integer
          example: [1]
    FileInfo:
      type: object
      required:
        - path
        - size
        - checksum
      properties:
        path:
          type: string
          example: media/favicon.ico
        checksum:
          description: sha1 hash
          type: string
          example: 9adb76bf81a34880209040ffe5ee262a090b62ab
        size:
          type: integer
          format: int64
          example: 1024
        mtime:
          deprecated: true
          type: string
          format: date-time
          example: 2018-11-30T08:47:58.636074Z
        diff:
          type: object
          nullable: true
          required:
            - path
            - checksum
          properties:
            path:
              type: string
              description: unique diff filename
              example: survey.gpkg-diff-15eqn2q
            checksum:
              type: string
              example: 45dfdfbf81a34asdf209040ffe5fasdf2a090bfa
            size:
              type: integer
              example: 512
        history:
          type: object
          description: map with version names as keys and file info as values
          additionalProperties:
            type: object
            required:
              - path
              - size
              - checksum
              - change
            properties:
              path:
                type: string
                example: media/favicon.ico
              checksum:
                description: sha1 hash
                type: string
                example: 9adb76bf81a34880209040ffe5ee262a090b62ab
              size:
                type: integer
                format: int64
                example: 1024
              change:
                type: string
                example: added
                enum:
                  - added
                  - updated
                  - removed
              expiration:
                nullable: true
                type: string
                format: date-time
                example: 2019-02-26T08:47:58.636074Z
    Project:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          example: f9ef87ac-1dae-48ab-85cb-062a4784fb83
          description: Project UUID
        name:
          type: string
          example: mergin
        namespace:
          type: string
          example: mergin
        creator:
          nullable: true
          type: integer
          example: 1
          description: Project creator ID
        created:
          type: string
          format: date-time
          example: 2018-11-30T08:47:58.636074Z
        updated:
          type: string
          nullable: true
          format: date-time
          example: 2018-11-30T08:47:58.636074Z
          description: Last modified
        version:
          type: string
          nullable: true
          example: v2
          description: Last project version
        disk_usage:
          type: integer
          example: 25324373
          description: Project size in bytes
        permissions:
          type: object
          properties:
            delete:
              type: boolean
              example: false
            update:
              type: boolean
              example: false
            upload:
              type: boolean
              example: true
        tags:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/MerginTag"
        uploads:
          type: array
          nullable: true
          items:
            type: string
            example: 669b838e-a30b-4338-b2b6-3da144742a82
            description: UUID for ongoing upload
        access:
          $ref: "#/components/schemas/Access"
        files:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
        role:
          nullable: true
          type: string
          enum:
            - reader
            - editor
            - writer
            - owner
